{"version":3,"file":"static/js/912.38be02ac.chunk.js","mappings":"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","sources":["components/TweetCard/TweetCard.styled.js","components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/Background/Background.styled.js","components/Background/Background.jsx","components/Avatar/Avatar.styled.js","components/Avatar/Avatar.jsx","components/Info/Info.styled.js","components/Info/Info.jsx","components/FollowingButton/FollowingButton.styled.js","components/FollowingButton/FollowingButton.jsx","components/TweetCard/TweetCard.jsx","components/TweetList/TweetList.styled.js","components/TweetList/TweetList.jsx","api.js","pages/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Article = styled.article`\n  position: relative;\n  width: 100%;\n  padding-top: 20px;\n  padding-bottom: 36px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: rgba(0, 0, 0, 0.23) -2.5777px 6.87386px 20.6216px;\n  border-radius: 20px;\n`;\n\nexport default Article;\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  margin-left: 20px;\n  margin-bottom: 172px;\n`;\n","import { Img } from './Logo.styled';\nimport logo from 'images/logo.png';\n\nconst Logo = () => {\n  return <Img src={logo} alt=\"Logo\" />;\n};\n\nexport default Logo;\n","import styled from 'styled-components';\n\nexport const Thumb = styled.div`\n  width: 308px;\n  height: 168px;\n  margin: 0 auto;\n  position: absolute;\n  top: 28px;\n  left: 0;\n  right: 0;\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n","import { Thumb, Img } from './Background.styled';\nimport bg from 'images/bg.png';\n\nconst Background = () => {\n    return (\n        <Thumb>\n            <Img src={bg} alt=\"Background\" />\n        </Thumb>\n    )\n};\n\nexport default Background;","import styled from 'styled-components';\n\nexport const Thumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 50%;\n  bottom: 50%;\n  width: 80px;\n  height: 80px;\n  margin-bottom: -10px;\n  margin-left: -40px;\n  border-radius: 50%;\n  background: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 3.43693px 3.43693px,\n    rgb(174, 123, 227) 0px -1.71846px 3.43693px inset,\n    rgb(251, 248, 255) 0px 3.43693px 2.5777px inset;\n`;\n\nexport const Img = styled.img`\n  width: 62px;\n  height: 62px;\n  object-fit: cover;\n  border-radius: 50%;\n  background: #5736a3;\n`;\n\nexport const Line = styled.div`\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 8px;\n  margin-bottom: 62px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n","import { Thumb, Img, Line } from './Avatar.styled';\n\nconst Avatar = ({avatar}) => {\n  return (\n    <>\n      <Line />\n      <Thumb>\n        <Img src={avatar} alt=\"User avatar\" />\n      </Thumb>\n    </>\n  );\n};\n\nexport default Avatar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 26px;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  text-align: center;\n`;\n","import { Wrapper, Text } from './Info.styled';\n\nconst Info = ({ user, followers, tweets }) => {\n  const formattedNumber = followers.toLocaleString('en-US', {useGrouping: true}); // \"100,500\"\n  \n  return (\n    <Wrapper>\n      <Text as=\"h2\">{user}</Text>\n      <Text>{tweets} tweets</Text>\n      <Text>{formattedNumber} Followers</Text>\n    </Wrapper>\n  );\n};\n\nexport default Info;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  width: 196px;\n  margin: 0 auto;\n  padding: 14px 28px;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out transform 250ms ease-in-out;\n    :hover {\n    transform: translateY(-4px);\n    box-shadow: rgb(255 0 134 / 50%) 0px 8px 43px;\n}\n`;\n\n\n","import { Button } from './FollowingButton.styled';\n\nconst FollowingButton = ({ handleClick, following }) => {\n  const getBgColor = following => {\n    return {\n      backgroundColor: following ? '#5CD3A8' : '#EBD8FF',\n    };\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      aria-label=\"Following button\"\n      onClick={() => {\n        handleClick();\n      }}\n      style={getBgColor(following)}\n    >\n      {following ? 'Following' : 'Follow'}\n    </Button>\n  );\n};\n\nexport default FollowingButton;\n","import { useState } from 'react';\nimport Article from './TweetCard.styled';\nimport Logo from 'components/Logo';\nimport Background from 'components/Background';\nimport Avatar from 'components/Avatar';\nimport Info from 'components/Info';\nimport FollowingButton from 'components/FollowingButton';\n\nconst TweetCard = ({user, avatar, followers, tweets}) => {\n  const [following, setFollower] = useState(false);\n  const [count, setCount] = useState(100500);\n\n// useEffect(() => {\n//   const savedFollower = JSON.parse(localStorage.getItem('following'));\n//   const savedCount = localStorage.getItem('count');\n//   if (savedFollower !== null && savedCount !== null) {\n//     setFollower(savedFollower);\n//     setCount(parseInt(savedCount));\n//   }\n// }, []);\n\n// useEffect(() => {\n// localStorage.setItem('following', JSON.stringify(following));\n//     localStorage.setItem('count', count);\n// }, [following, count]);\n\n  const handleClick = () => {\n    setFollower(!following);\n    setCount(following ? 100500 : count + 1);\n  };\n\n  return (\n    <Article>\n      <Logo />\n      <Background />\n      <Avatar avatar={avatar} />\n      <Info tweets={tweets} followers={followers} user={user} />\n      <FollowingButton handleClick={handleClick} following={following} />\n    </Article>\n  );\n};\n\nexport default TweetCard;\n","import styled from 'styled-components';\n\nexport const TweetBox = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  @media (min-width: 1200px) {\n    gap: 20px;\n  }\n`;\n\nexport const TweetItem = styled.li`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: calc((100% - 30px) / 2);\n  }\n  @media (min-width: 1200px) {\n    flex-basis: calc((100% - 40px) / 3);\n  }\n`;\n","import TweetCard from 'components/TweetCard';\nimport { TweetBox, TweetItem } from \"./TweetList.styled\";\n\nconst TweetList = ({ users }) => {\n\n  return (\n    <TweetBox>\n      {users &&\n        users.map(({ id, user, avatar, followers, tweets }) => {\n          return (\n            <TweetItem key={id}>\n              <TweetCard user={user} avatar={avatar} tweets={tweets} followers={followers} />\n            </TweetItem>\n          );\n        })}\n    </TweetBox>\n  );\n};\n\nexport default TweetList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://644b7e0617e2663b9df0a34d.mockapi.io/';\n\nexport const getUsers = async () => {\n  try {\n    const { data } = await axios.get(`/users`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport TweetList from 'components/TweetList';\nimport Container from 'components/Container';\nimport Loader from 'Loader';\nimport { getUsers } from 'api';\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getUsersTweets() {\n      try {\n        setIsLoading(true);\n        const data = await getUsers();\n        setUsers(data);\n        setIsLoading(false);\n      } catch (error) {\n        alert('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getUsersTweets();\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <TweetList users={users} />\n        <TweetList />\n        {isLoading && <Loader />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["styled","Img","src","alt","Thumb","bg","Line","avatar","Wrapper","Text","user","followers","tweets","formattedNumber","toLocaleString","useGrouping","as","Button","handleClick","following","type","onClick","style","backgroundColor","getBgColor","useState","setFollower","count","setCount","TweetBox","TweetItem","users","map","id","axios","getUsers","data","console","log","message","setUsers","isLoading","setIsLoading","useEffect","alert","getUsersTweets","Container","Loader"],"sourceRoot":""}